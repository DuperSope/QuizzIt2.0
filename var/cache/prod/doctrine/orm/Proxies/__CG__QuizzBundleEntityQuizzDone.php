<?php

namespace Proxies\__CG__\QuizzBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class QuizzDone extends \QuizzBundle\Entity\QuizzDone implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'id', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'quizz', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'user', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'questiondone', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'percentage', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'nbValidAnswer', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'nbAnswer', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'nbDo', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'date'];
        }

        return ['__isInitialized__', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'id', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'quizz', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'user', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'questiondone', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'percentage', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'nbValidAnswer', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'nbAnswer', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'nbDo', '' . "\0" . 'QuizzBundle\\Entity\\QuizzDone' . "\0" . 'date'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (QuizzDone $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuizz($quizz)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuizz', [$quizz]);

        return parent::setQuizz($quizz);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuizz()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuizz', []);

        return parent::getQuizz();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser($user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', [$user]);

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', []);

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function setQuestiondone($questiondone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setQuestiondone', [$questiondone]);

        return parent::setQuestiondone($questiondone);
    }

    /**
     * {@inheritDoc}
     */
    public function getQuestiondone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getQuestiondone', []);

        return parent::getQuestiondone();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', [$date]);

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', []);

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function addQuestiondone(\QuizzBundle\Entity\QuestionDone $questiondone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addQuestiondone', [$questiondone]);

        return parent::addQuestiondone($questiondone);
    }

    /**
     * {@inheritDoc}
     */
    public function removeQuestiondone(\QuizzBundle\Entity\QuestionDone $questiondone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeQuestiondone', [$questiondone]);

        return parent::removeQuestiondone($questiondone);
    }

    /**
     * {@inheritDoc}
     */
    public function setNbQuestion($nbQuestion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbQuestion', [$nbQuestion]);

        return parent::setNbQuestion($nbQuestion);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbQuestion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbQuestion', []);

        return parent::getNbQuestion();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbValidAnswer($nbValidAnswer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbValidAnswer', [$nbValidAnswer]);

        return parent::setNbValidAnswer($nbValidAnswer);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbValidAnswer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbValidAnswer', []);

        return parent::getNbValidAnswer();
    }

    /**
     * {@inheritDoc}
     */
    public function setPercentage($percentage)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPercentage', [$percentage]);

        return parent::setPercentage($percentage);
    }

    /**
     * {@inheritDoc}
     */
    public function getPercentage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPercentage', []);

        return parent::getPercentage();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbDo($nbDo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbDo', [$nbDo]);

        return parent::setNbDo($nbDo);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbDo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbDo', []);

        return parent::getNbDo();
    }

    /**
     * {@inheritDoc}
     */
    public function setNbAnswer($nbAnswer)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNbAnswer', [$nbAnswer]);

        return parent::setNbAnswer($nbAnswer);
    }

    /**
     * {@inheritDoc}
     */
    public function getNbAnswer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNbAnswer', []);

        return parent::getNbAnswer();
    }

}
